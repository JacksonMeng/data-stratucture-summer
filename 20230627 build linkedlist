class Node {
    int data;
    Node next;

    Node(int data) {
        this.data = data;
        this.next = null;
    }
}

class LinkedList {
    Node head;

    // Method to insert a node at the head of the list
    public void insertAtHead(int data) {
        Node newNode = new Node(data);
        newNode.next = head;
        head = newNode;
    }

    // Method to delete the head node
    public void deleteHead() {
        if (head != null) {
            head = head.next;
        }
    }

    // Method to get the size of the LinkedList
    public int getSize() {
        Node current = head;
        int count = 0;
        while (current != null) {
            count++;
            current = current.next;
        }
        return count;
    }

    // Method to display the LinkedList
    public void display() {
        Node node = head;
        while (node != null) {
            System.out.print(node.data + " ");
            node = node.next;
        }
        System.out.println();
    }

    // Method to search for a node with given data
    public boolean search(int data) {
        Node current = head;
        while (current != null) {
            if (current.data == data) {
                return true;
            }
            current = current.next;
        }
        return false;
    }
}

public class Main {
    public static void main(String[] args) {
        LinkedList linkedList = new LinkedList();
        linkedList.insertAtHead(3);
        linkedList.insertAtHead(2);
        linkedList.insertAtHead(1);
        System.out.println("Size: " + linkedList.getSize()); // Prints: Size: 3
        linkedList.display(); // Displays: 1 2 3

        linkedList.deleteHead();
        System.out.println("Size: " + linkedList.getSize()); // Prints: Size: 2
        linkedList.display(); // Displays: 2 3

        System.out.println(linkedList.search(3)); // Prints: true
        System.out.println(linkedList.search(1)); // Prints: false
    }
}
