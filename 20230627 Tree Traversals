public class Node {
    int value;
    Node left;
    Node right;

    Node(int value) {
        this.value = value;
        left = null;
        right = null;
    }
}

public class BinaryTree {
    Node root;

    // Inorder traversal
    void printInorder(Node node) {
        if (node == null)
            return;

        // first recur on left child
        printInorder(node.left);

        // then print the data of node
        System.out.print(node.value + " ");

        // now recur on right child
        printInorder(node.right);
    }

    // Preorder traversal
    void printPreorder(Node node) {
        if (node == null)
            return;

        // first print the data of node
        System.out.print(node.value + " ");

        // then recur on left subtree
        printPreorder(node.left);

        // now recur on right subtree
        printPreorder(node.right);
    }

    // Postorder traversal
    void printPostorder(Node node) {
        if (node == null)
            return;

        // first recur on left subtree
        printPostorder(node.left);

        // then recur on right subtree
        printPostorder(node.right);

        // now deal with the node
        System.out.print(node.value + " ");
    }
}

public class Main {
    public static void main(String[] args) {
        BinaryTree tree = new BinaryTree();
        tree.root = new Node(1);
        tree.root.left = new Node(2);
        tree.root.right = new Node(3);
        tree.root.left.left = new Node(4);
        tree.root.left.right = new Node(5);

        System.out.println("Preorder traversal of binary tree is: ");
        tree.printPreorder(tree.root);

        System.out.println("\nInorder traversal of binary tree is: ");
        tree.printInorder(tree.root);

        System.out.println("\nPostorder traversal of binary tree is: ");
        tree.printPostorder(tree.root);
    }
}
